一、说明
1.下文flag表示标志位，长度1字节，详见第三章的列表
2.下文所有()内的数值或?表示该变量的字节长度，?表示不定长
3.下文所有[]表示列表


二、接口
1.注册
客户端请求：flag(1), username_len(1), password_len(1), username(?), password(?)
          示例：'\x02', '\x03', '\x06', "abc", "huawei"
服务器响应：a)成功 flag(1), userid(?)，示例：'\x02', "100"
          b)失败 flag(1)，示例：'\x81'

2.登录
客户端请求：flag(1), userid_len(1), password_len(1), userid(?), password(?)
          示例：'\x01', '\x03', '\x06', "100", "huawei"
服务器响应：a)成功 flag(1), friNum_len(1), friNum(?), [fri1ID_len(1), fri1ID[?], fri2ID_len(2), fri2ID[?]......]
            示例：'\x01', '\x02', "2", '\x02', "20", '\x03', "111"
          b)失败 flag(1)，示例：'\x84'
            
3.添加好友
客户端请求：flag(1), selfID_len(1), friendID_len(1), selfID(?), friendID(?)
          示例：'\x03', '\x2', '\x03', "20", "100"
服务器响应：a)成功 flag(1)，示例：'\x03'
          b)失败 flag(1)，示例：'\x85'



三、附录
1.自定义协议的FLAG列表
用户在线                          "\x00"	// 0000 0000
用户离线                          "\xFF"	// 1111 1111
登录请求及登录成功的响应          "\x01"	// 0000 0001
注册请求及注册成功的响应          "\x02"	// 0000 0010
添加好友请求及添加成功的响应      "\x03"	// 0000 0011
注册用户数超过预定的最大值        "\x81"	// 1000 0001
同一个用户名注册两次              "\x82"	// 1000 0010
鉴权失败                          "\x83"	// 1000 0011
登录时用户不存在                  "\x84"	// 1000 0100
添加好友时好友不存在              "\x85"	// 1000 0101
好友已经被添加了两次              "\x86"	// 1000 0110

